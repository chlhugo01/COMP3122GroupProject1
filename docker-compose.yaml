version: "3.3"
services:
  login_service:
    container_name: c0
    build: ./login_service
    command: python login_service.py
    volumes:
      - ./login_service:/app
    ports:
      - 15100:15000
    depends_on:
      -  mongo_user
    
  mongo_order:
    image: mongo
    container_name: db2
    environment:
      MONGO_INITDB_ROOT_USERNAME: comp3122
      MONGO_INITDB_ROOT_PASSWORD: 23456
      MONGO_INITDB_DATABASE: admin
    volumes:
      - ./order_service/order-init.js:/docker-entrypoint-initdb.d/order-init.js
      - db2:/data/db
    expose:
      - 27017
  mongo_user:
    image: mongo
    container_name: db0
    environment:
      MONGO_INITDB_ROOT_USERNAME: comp3122
      MONGO_INITDB_ROOT_PASSWORD: 23456
      MONGO_INITDB_DATABASE: admin
    volumes:
      - ./login_service/user-init.js:/docker-entrypoint-initdb.d/user-init.js
      - db0:/data/db
    ports:
      - 27100:27017

  restaurant_service:
    container_name: c1
    build: ./restaurant_service
    command: python restaurant_service.py
    volumes:
      - ./restaurant_service:/app
    ports:
      - 15101:15000
    depends_on:
      -  mongo_restaurant

  mongo_restaurant:
    image: mongo
    container_name: db1
    environment:
      MONGO_INITDB_ROOT_USERNAME: comp3122
      MONGO_INITDB_ROOT_PASSWORD: 23456
      MONGO_INITDB_DATABASE: admin
    volumes:
      - ./restaurant_service/restaurant-init.js:/docker-entrypoint-initdb.d/restaurant-init.js
      - db1:/data/db
    ports:
      - 27101:27017

  order_service:
    image: order_service
    container_name: c2
    build: ./order_service
    command: python order_service.py
    volumes:
      - ./order_service:/app
    ports:
      - 15102:15000
    depends_on:
      -  mongo_order
      
  mongo_order:
    image: mongo
    container_name: db2
    environment:
      MONGO_INITDB_ROOT_USERNAME: comp3122
      MONGO_INITDB_ROOT_PASSWORD: 23456
      MONGO_INITDB_DATABASE: admin
    volumes:
      - ./order_service/order-init.js:/docker-entrypoint-initdb.d/order-init.js
      - db2:/data/db
    expose:
      - 27017

  update_service:
    container_name: c3
    build: ./update_service
    command: python update_service.py
    volumes:
      - ./update_service:/app
    ports:
      - 15103:15000
    depends_on:
      -  mongo_restaurant
  redis:
    container_name: redis
    image: redis
    expose:
      - 6379
  #prometheus:
  #  image: prom/prometheus
  #  ports:
  #    - 9090:9090
  #  volumes:
  #    - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #    - ./alert_rules.yaml:/etc/prometheus/alert_rules.yaml
  #grafana:
  #  image: grafana/grafana
  #  volumes:
  #    - "./grafana/grafana.ini:/etc/grafana/grafana.ini"
  #    - ./grafana/provisioning/:/etc/grafana/provisioning/
  #  ports:
  #    - 3000:3000
  #  depends_on:
  #    -  prometheus
  #alertmanager:
  #   image: prom/alertmanager
  #   ports:
  #     - 9093:9093
  #   volumes:
  #     - ./alertmanager.yaml/:/etc/alertmanager/alertmanager.yaml
  #   restart: always
  #   command:
  #     - '--config.file=/etc/alertmanager/alertmanager.yaml'
  #     - '--storage.path=/alertmanager'
networks:
  default:
    name: pj_network

volumes:
  db0:
    name: db0
  db1:
    name: db1
  db2:
    name: db2

